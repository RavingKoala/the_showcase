services:
  db:
    environment:
      ACCEPT_EULA: "Y"
    # mssql server image isn't available for arm64 architecture, so we use azure-sql instead
    image: mcr.microsoft.com/mssql/server:latest 
    volumes:
      - mssqlsystem:/var/opt/mssql
      - mssqluser:/var/opt/sqlserver
      - ${MSSQL_CONFIG_DIR:-./.config/mssql}/entrypoint.sh:/usr/src/app/entrypoint.sh
      - ${MSSQL_CONFIG_DIR:-./.config/mssql}/sql/:/usr/src/app/docker-entrypoint-initdb.d
    env_file:
      - path: ./.env
    ports:
      - "1433:1433"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $$DBPassword -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      timeout: 3s
      start_period: 20s
      start_interval: 5s
  api:
    image: ${DOCKER_REGISTRY-}api
    env_file:
      - path: ./.env
    environment:
      - ASPNETCORE_HTTP_PORTS=8180
      - ASPNETCORE_HTTPs_PORTS=8181
      - ASPNETCORE_Kestrel__Certificates__Default__Password=$API_CERTIFICATE_PASSWORD
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - "8180:8180"
      - "8181:8181"
    build:
      context: ./Api
      dockerfile: ./Dockerfile
  web:
    image: ${DOCKER_REGISTRY-}web
    volumes:
      - /c/dpkeys:/var/dpkeys
    env_file:
      - path: ./.env
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPs_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=$API_CERTIFICATE_PASSWORD
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - "8080:8080"
      - "8081:8081"
    build:
      context: ./Web
      dockerfile: ./Dockerfile
    depends_on:
      db:
        condition: service_healthy

volumes:
  mssqlsystem: # external: true
  mssqluser: # external: true
